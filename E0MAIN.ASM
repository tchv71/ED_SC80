;**********************************************
;*        TCHV text full-screen editor        *
;*               (c) 1989-92                  *
;* Text processing and general control module *
;**********************************************

;	 6-Dec-1991
;	 8-Dec-1991 -   80 - symbol mode for CP/M,
;		macros SetScrAddr and WriteNextSym
;	14-Jan-1992 -  Use some CP/M features
;	28-Jan-1992 -  Change command table presentation
;	01-Mar-1992 -  Delete some bugs
;	15-Mar-1992 -  Add case insensitive search

;	02-Apr-2021 -  Original RK back-adaptation
;	25-Apr-2021 -  Controller addresses table


PUBLIC	INFADR
;PUBLIC	INFSTR

.8080
	CSEG
	;ORG 104H

StkSize	EQU	30h

TXTBUFF	EQU	2000H
WRK	EQU	1E00H


IFNDEF	noend
extrn	SETCURSOR,SETSCR ; From E0DISP.ASM
extrn	GETCHC,GETCHR	; From E0GETC.ASM

extrn   FNDCMD		; From E0CMDT.ASM
ENDIF

LineSym		equ	1ch
DelimSym	equ	1bh

INFSTR_OFFS	EQU	ScrWidth*(ScrHeight-1)
;INFSTR	EQU	VRAM+INFSTR_OFFS
MAXLEN	EQU	127

PUBLIC	VRAM_ADR,PPI_ADR,DISP_ADR,DMA_ADR

	JMP	START
; Controller addresses table
IFDEF	PALMIRA
	VRAM_ADR:	DW 0B7C2h	; VRAM buffer start address - 0E7C2h
	PPI_ADR:	DW 0C200h 	; VV55 keyboard Controller - 0F780h
	PPI2_ADR:	DW 0C400h	; VV55 additional PPI  - 0F7A0h
	DISP_ADR:	DW 0C000h	; VG75 Display Controller - 0F7C0h
	DMA_ADR:	DW 0E000h	; VT57 DMA Controller - 0F7E0h
ELSE
  IFDEF	RK60k
	VRAM_ADR:	DW 0E7C2h	; VRAM buffer start address - 0E7C2h
	PPI_ADR:	DW 0F780h 	; VV55 keyboard Controller - 0F780h
	PPI2_ADR:	DW 0F7A0h	; VV55 additional PPI  - 0F7A0h
	DISP_ADR:	DW 0F7C0h	; VG75 Display Controller - 0F7C0h
	DMA_ADR:	DW 0F7E0h	; VT57 DMA Controller - 0F7E0h
  ELSE
	VRAM_ADR:	DW 77C2h	; VRAM buffer start address - 77c2h
	PPI_ADR:	DW 08000h 	; VV55 keyboard Controller - 8000h
	PPI2_ADR:	DW 0A000h	; VV55 additional PPI  - 0A000h	
	DISP_ADR:	DW 0C000h	; VG75 Display Controller - 0C000h
	DMA_ADR:	DW 0E000h	; VT57 DMA Controller - 0E000h
  ENDIF
ENDIF
		DW 0,0,0,0 ; Reserved for future use

START::
	CALL	GETMAXMEM;lhld	6
	sphl
	MVI	M,0FFH
	MVI	A,1
	STA	DISPOS
	STA	DISPS0
	LXI	H,0
	SHLD	SCRBG0
	CALL	INIT
	MVI	A,0FFH
	STA	?WIN1
	LXI	H,101H
	SHLD	CURX
	SHLD	CURX0
	LXI	H,1
 	SHLD	CURSTR
	CALL	CLS
	CALL	OVRW
	LXI	H,TXTBUFF
	SHLD	nivgr
	SHLD	BLBEG
	SHLD	BLEND
	XCHG
	CALL	MAXRAM
	SHLD	werhgr
	XCHG
	CALL	CHECKMEM
	CPI	0FFH
	JZ	M01
	LHLD	nivgr
	MVI	M,0DH
	INX	H
	MVI	M,0FFH
M01:	SHLD	werhgr
M00:	LHLD	nivgr
	SHLD	SCRADR
	SHLD	STRADR
	SHLD	TABSRH
	CALL	COMPST
	LHLD	SCRADR
	SHLD	SCRAD0
	LHLD	STRADR
	SHLD	STRAD0
	CALL	CURSM
	CALL	DISPLY
	JMP	M03

SETINF:	CALL	DRLIN
	LHLD	STRADR
	SHLD	TABSRH
	CALL	CURSM
	CALL	LINE

	CALL	GETINFADR
	SetScrAddr
	mvi	c,8
@@000:	mvi	a,space
	WriteNextSym
	dcr	c
	JNZ	@@000

	CALL	INFPR
	DW	8
	DC	'LINE: '

	LHLD	NUMSTR
	CALL	?FBBCD
	XCHG
	CALL	GETINFADR
	PUSH	D
	LXI	D,22
	DAD	D
	POP	D
	CALL	BPR
	mvi	a,'/'
	SetScrAddr
	WriteNextSym
	DCX	H
	DCX	H
	PUSH	H
	LHLD	CURSTR
	CALL	?FBBCD
	XCHG
	POP	H
	CALL	BPR
	CALL	INFPR
	DW	36
	DC	'     TEXT:'
	LHLD	werhgr
	XCHG
	CALL	GETINFADR
	PUSH	D
	LXI	D,57
	DAD	D
	POP	D
	SetScrAddr
	mvi	a,'H'
	WriteNextSym
	dcx	h
	DCX	H
	CALL	BPR
	call	INFPR
	dw	51
	dc	'H-'
	CALL	GETINFADR
	PUSH	D
	LXI	D,50
	DAD	D
	POP	D
	XCHG
	LHLD	nivgr
	XCHG
	CALL	BPR
	CALL	INFPR
	DW	23
	DC	'      COL:'
	JMP	DISCUR

WRMSRT:	CALL	SAVMOD
OUT1:	CALL	DISPLY
OUT3:	CALL	GETMAXMEM;lhld	6
	sphl
	JMP	M03

MAXRAM:	CALL	GETMAXMEM;LHLD	6
	push	b
	lxi	b,-StkSize
	dad	b
	pop	b
	RET

CLS:	;lxi	h,ScrStart
	lhld	VRAM_ADR
	lxi	b,ScrSize-1

	SetScrAddr
	mvi	a,84H
	WriteNextSym
ClsLoop:
	mvi	a,space
	WriteNextSym
	DCX	B
	MOV	A,B
	ORA	C
	jnz	ClsLoop
	RET

INIT:
	LHLD	VRAM_ADR
	SHLD	SCRBEG
	MVI	A,LogicHeight
	STA	YSIZE
	XRA	A
	STA	YBEG
	LHLD	VRAM_ADR
	LXI	D,INFSTR_OFFS
	DAD	D
	SHLD	INFADR
	RET

DRLIN:	LDA	SCRBG0+1
	ORA	A
	RZ
	LHLD	INFADR
	LDA	?WIN1
	ORA	A
	JNZ	$+6
	LHLD	INFAD0
	LXI	B,-ScrWidth
	DAD	B
	MVI	A,LogicWidth-1
	MVI	M,'^'
	INX	H
	DCR	A
	JNZ	$-4
	RET

CHECKMEM:	MOV	A,M
	CPI	0FFH
	JNZ	CHKM0
	DCX	H
	MOV	A,M
	INX	H
	CPI	0DH
	MVI	A,0FFH
	RZ
CHKM0:	INX	H
	MOV	A,H
	INR	A
	CMP	D
	JC	CHECKMEM
	MOV	A,L
	INR	A
	CMP	E
	JC	CHECKMEM
	MVI	A,0
	RET

DISCUR:	LDA	CURX
	MOV	L,A
	MVI	H,0
	CALL	?FBBCD
	XCHG
	CALL	GETINFADR
	PUSH	D
	LXI	D,35
	DAD	D
	POP	D
	MOV	A,E
	CALL	BPR1
	MOV	A,D
	JMP	BPR01

INRCUR:	LHLD	CURSTR
	INX	H
	SHLD	CURSTR
	RET

DCRCUR:	LHLD	CURSTR
	DCX	H
	SHLD	CURSTR
	RET

COMPST:	LXI	D,0
	LHLD	nivgr
COMP1:	MOV	A,M
	INX	H
	CPI	0FFH
	JZ	COMP0
	CPI	0DH
	JNZ	COMP1
	INX	D
	JMP	COMP1
COMP0:	XCHG
	SHLD	NUMSTR
	RET

COMCUR:	LHLD	nivgr
	XCHG
	LHLD	STRADR
	MOV	A,L
	SUB	E
	MOV	C,A
	MOV	A,H
	SBB	D
	MOV	B,A
	INX	B
	LXI	D,1
COMP2:	DCX	B
	MOV	A,B
	ORA	C
	JZ	COMP3
	MOV	A,M
	DCX	H
	CPI	0DH
	JNZ	$+4
	INX	D
	JMP	COMP2
COMP3:	XCHG
	SHLD	CURSTR
	RET

DISPLY:	PUSH	H
	PUSH	B
	PUSH	PSW
	PUSH	D
	CALL	SWPWN
	JZ	DSPL0
	CALL	DSPL1
	CALL	SWPWN
DSPL0:	CALL	DSPL1
	POP	D
	POP	PSW
	POP	B
	POP	H
	RET

DSPL1:	LHLD	SCRADR
	XCHG
	LHLD	SCRBEG
	LDA	YSIZE
	MOV	B,A
	CALL	D01
	SHLD	SCREND
	RET


D01:
	XRA	A
	STA	?END
	PUSH	B
	lda	DISPOS
	CALL	DISSTR
	POP	B
	CPI	0FFH
	JZ	@11
	INX	D
	DCR	B
	JNZ	D01
	JMP	@12
@11:	LDA	?END
	ORA	A
	JNZ	@110
	MOV	A,B
	STA	?END
@110:	DCR	B
	JZ	@12
@9:	MVI	C,ScrWidth

@10:
	SetScrAddr

@101:	mvi	a,space
	WriteNextSym
	DCR	C
	JNZ	@10
	DCR	B
	JNZ	@9
@12:	XCHG
	RET

;@

DELAY0:	DCX	B
	MOV	A,B
	ORA	C
	JNZ	DELAY0
	RET


wlewo:	LDA	CURX
	DCR	A
	RZ
	STA	CURX
	JMP	CURSM

wprawo:	LDA	CURX
	CPI	MAXLEN
	RNC
	INR	A
	STA	CURX
	JMP	CURSM

wp1:	LDA	DISPOS
	ADI	8
	STA	DISPOS
	CALL	DISPLY
	JMP	CURSM

GETC:	PUSH	H
	PUSH	D
	PUSH	B
	LHLD	TABSRH
	LDA	CURX
	MOV	C,A
	MVI	B,1
	MOV	E,B
GTC0:	MOV	A,B
	CMP	C
	JNC	GTC3
	MOV	A,M
	INX	H
	CPI	9
	JZ	GTC1
	CPI	0DH
	JZ	GTC2
	INR	B
	INR	E
	JMP	GTC0
GTC1:	MOV	A,B
	call	CalcNextTabPos
	MOV	B,A
	MOV	A,C
	CMP	B
	JC	GTC3
	INR	E
	JMP	GTC0
GTC2:	MOV	A,C
	SUB	B
	ADD	E
	MOV	E,A
GTC3:	MOV	A,E
	POP	B
	POP	D
	POP	H
	RET

CURCM:	PUSH	H
	PUSH	B
	LHLD	TABSRH
	LDA	CURX
	MOV	C,A
	MVI	B,1
CC0:	DCR	C
	JZ	CC2
	MOV	A,M
	INX	H
	CPI	9
	JZ	CC1
	CPI	0DH
	JZ	CC3
	CPI	0FFH
	JZ	CC3
	INR	B
	JMP	CC0
CC1:	MOV	A,B
	call	CalcNextTabPos
	MOV	B,A
	JMP	CC0
CC3:	INR	B
	DCR	C
	JNZ	CC3
CC2:	MOV	A,B
	STA	CURX
	CALL	CURSM
	POP	B
	POP	H
	RET

CalcNextTabPos:
	DCR	A
	ORI	TabStep-1
	ADI	2
	ret

INFCRM:	LDA	YSIZE
	ADI	2
	STA	CURY
CURM:	push	h
	lhld	CURX
	call	SetCursor
	pop	h
	ret

CURSM::	LDA	DISPOS
	PUSH	B
	MOV	B,A
	LDA	CURX
	SUB	B
	POP	B
	JC	LEFT
	CPI	LogicWidth
	JNC	RIGHT
MovCur:	INR	A
	mov	l,a
	lda	CURY
	MOV	h,A
	LDA	YBEG
	add	h
	mov	h,a
	call	SetCursor
	ora	a
	ret


LEFT:	LDA	DISPOS
	SUI	8
	STA	DISPOS
	JMP	CURM1

RIGHT:	LDA	DISPOS
	ADI	8
	STA	DISPOS
CURM1:	LDA	DISPOS
	PUSH	B
	MOV	B,A
	LDA	CURX
	SUB	B
	POP	B
	JC	LEFT
	CPI	LogicWidth
	JNC	RIGHT
	CALL	DISPLY
	jmp	MovCur

;---------------------------------------------

wniz:	PUSH	D
	LHLD	STRADR
	CALL	NEXTST
	POP	D
	RZ
	SHLD	STRADR
	CALL	INRCUR
	LDA	YSIZE
	DCR	A
	MOV	B,A
	LDA	CURY
	CMP	B
	JNC	ROLLUP
	INR	A
	STA	CURY
	JMP	CURSM

RLUP:	LHLD	STRADR
	CALL	NEXTST
	RZ
	SHLD	STRADR
	CALL	INRCUR
ROLLUP:	LHLD	SCRADR
	CALL	NEXTST
	SHLD	SCRADR
	RZ
	CALL	SCRUP
	LHLD	SCREND
	XCHG
	LXI	B,-2*ScrWidth
	LHLD	INFADR
	DAD	B
	lda	DISPOS
	CALL	DISSTR
	CPI	0FFH
	JZ	wn20


	INX	D
	XCHG
	SHLD	SCREND
	RET
wn20:	LXI	H,?END
	INR	M
	RET

SCRDN:	LXI	H,0
	DAD	SP
	SHLD	PRSP
	LXI	SP,LogicWidth-ScrWidth
	LHLD	INFADR
	LXI	D,LogicWidth-3*ScrWidth-1
	DAD	D
	XCHG
	LXI	H,ScrWidth
	DAD	D
	LDA	YSIZE
	DCR	A
	MOV	B,A
SCD1:	MVI	C,LogicWidth/4
SCD0:	LDAX	D
	MOV	M,A
	DCX	H
	DCX	D
	LDAX	D
	MOV	M,A
	DCX	H
	DCX	D
	LDAX	D
	MOV	M,A
	DCX	H
	DCX	D
	LDAX	D
	MOV	M,A
	DCX	H
	DCX	D
	DCR	C
	JNZ	SCD0
	DAD	SP
	XCHG
	DAD	SP
	XCHG
	DCR	B
	JNZ	SCD1
	LHLD	PRSP
	SPHL
	RET

SCRUP:	LXI	H,0
	DAD	SP
	SHLD	PRSP
	LXI	SP,ScrWidth-LogicWidth
	LXI	D,ScrWidth
	LHLD	SCRBEG
	DAD	D
	XCHG
	LHLD	SCRBEG

	LDA	YSIZE
	DCR	A
	MOV	B,A

SCU1:	MVI	C,LogicWidth/4
SCU0:	LDAX	D
	MOV	M,A
	INX	H
	INX	D
	LDAX	D
	MOV	M,A
	INX	H
	INX	D
	LDAX	D
	MOV	M,A
	INX	H
	INX	D
	LDAX	D
	MOV	M,A
	INX	H
	INX	D
	DCR	C
	JNZ	SCU0
	DAD	SP
	XCHG
	DAD	SP
	XCHG
	DCR	B
	JNZ	SCU1
	LHLD	PRSP
	SPHL
	RET

NEXTST:	MOV	A,M
	CPI	0FFH
	RZ
	CPI	0DH
	JZ	NXTS0
	INX	H
	JMP	NEXTST
NXTS0:	INX	H
	MOV	A,M
	CPI	0FFH
	RET

wwerh:	PUSH	D
	LHLD	STRADR
	CALL	PREVST
	POP	D
	SHLD	STRADR
	RZ
	CALL	DCRCUR
	LDA	CURY
	DCR	A
	JZ	ROLLDN
	STA	CURY
	JMP	CURSM


RLDN:	LHLD	SCRADR
	CALL	PREVST
	RZ
	LHLD	STRADR
	CALL	PREVST
	SHLD	STRADR
	CALL	DCRCUR
ROLLDN:	LHLD	SCRADR
	CALL	PREVST
	SHLD	SCRADR
	RZ
	PUSH	H
	CALL	SCRDN
	LHLD	SCRBEG
	XCHG
	POP	H
	xCHG
	lda	DISPOS
	CALL	DISSTR

	LXI	H,?END
	MOV	A,M
	ORA	A
	JZ	RLD0
	DCR	M
	RET
RLD0:	LHLD	SCREND
	CALL	PREVST
	SHLD	SCREND
	RET

PREVST:	DCX	H
	LDA	nivgr+1
	DCR	A
	CMP	H
	JZ	PREVS0
PREVS1:	DCX	H
	LDA	nivgr+1
	DCR	A
	CMP	H
	JZ	PREVS2
	MOV	A,M
	CPI	0DH
	JNZ	PREVS1
PREVS2:	MVI	A,1
	ORA	A
	INX	H
	RET

PREVS0:	LHLD	nivgr
	RET


SETRST:	LXI	H,STRRED
	SHLD	TABSRH
	LHLD	STRADR
	LXI	D,STRRED
	MVI	B,MAXLEN+1
	MVI	C,0
I00:	MOV	A,M
	STAX	D
	INX	H
	INX	D
	INR	C
	CPI	0DH
	JZ	I01
	CPI	0FFH
	JZ	I01
	DCR	B
	JNZ	I00
	MVI	A,0DH
	STAX	D
	INR	C
I01:	MOV	A,C
	STA	OLDMES
	STA	NEWMES
	LHLD	SCRBEG
	LDA	CURY
	DCR	A
	JZ	I02
	LXI	B,ScrWidth
I03:	DAD	B
	DCR	A
	JNZ	I03
I02:	SHLD	VDADR
	LHLD	BLBEG
	SHLD	OLDBLB
	CALL	CHKPNT
	MVI	A,0
	JC	$+4
	CMA
	STA	BEGCOR
	LHLD	BLEND
	SHLD	OLDBLE
	CALL	CHKPNT
  	MVI	A,0
	JC	$+4
	CMA
	STA	ENDCOR
	RET

INSRED:	LDA	NEWMES
	DCR	A
	CALL	CAD1
	INR	A
	MOV	B,A
I08:	DCX	H
	DCR	B
	JZ	I09
	MOV	A,M
	CPI	20H
	JZ	I08
	CPI	9
	JZ	I08
I09:	INX	H
	MVI	M,0DH
	MOV	A,B
	INR	A
	STA	NEWMES
INSR1:	LDA	OLDMES
	MOV	C,A
	LDA	NEWMES
	SUB	C
	JZ	I04
	MVI	B,0
	JNC	$+5
	MVI	B,-1
	MOV	C,A
	PUSH	PSW
	PUSH	B
	LHLD	SCREND
	DAD	B
	SHLD	SCREND
	LDA	OLDMES
	CALL	CADR11
	POP	B
	PUSH	H
	DAD	B
	POP	B
	MOV	D,H
	MOV	E,L
	POP	PSW
	PUSH	PSW
	CNC	UPSHT
        POP	PSW
	CC	DNSHT

I04:	LHLD	STRADR
	LXI	D,STRRED
	LDA	NEWMES
	MOV	B,A
	ORA	A
	RZ
I06:	LDAX	D
	MOV	M,A
	INX	H
	INX	D
	DCR	B
	JNZ	I06
	RET

UPSHT:	CALL	COMPADR
U1:	INX	B
	INX	H
U0:	DCX	H
	DCX	B
	LDAX	B
	MOV	M,A
	MOV	A,D
	CMP	H
	JNZ	U0
	MOV	A,E
	CMP	L
	JNZ	U0
	JNZ	U0
	RET

DNSHT:	PUSH	B
	CALL	COMPADR
	POP	B
D1:	DCX	B
	DCX	D
D0:	INX	B
	INX	D
	LDAX	B
	STAX	D
	MOV	A,H
	CMP	D
	JNZ	D0
	MOV	A,L
	CMP	E
	JNZ	D0
	RET

COMPADR:PUSH	B
	MOV	A,B
	CMA
	MOV	B,A
	MOV	A,C
	CMA
	MOV	C,A
	INX	B
	MOV	H,D
	MOV	L,E
	DAD	B
	POP	B
	PUSH	H
	PUSH	D
	MOV	D,B
	MOV	E,C
	MOV	B,H
	MOV	C,L
	LHLD	BLBEG
	CALL	CORPNT
	LDA	BEGCOR
	ORA	A
	JNZ	$+6
	SHLD	BLBEG
	LHLD	BLEND
	CALL	CORPNT
	LDA	ENDCOR
	ORA	A
	JNZ	$+6
	SHLD	BLEND
	LHLD	STRAD0
	CALL	CORPNT
	SHLD	STRAD0
	LHLD	SCRAD0
	CALL	CORPNT
	SHLD	SCRAD0
	XRA	A
	STA	BEGCOR
	STA	ENDCOR
	POP	D
	POP	H
	PUSH	D
	XCHG
	LHLD	werhgr
	PUSH	H
	CALL	CHKMEM
	DAD	D
	SHLD	werhgr
	POP	B
	POP	D
	RET

CHKMEM:	PUSH	H
	LXI	H,8000H
	CALL	CDEHL
	POP	H
	RC
	PUSH	H
	CALL	INV_H
	PUSH	D
	XCHG
	CALL	MAXRAM
	DAD	D
	POP	D
	CALL	CDEHL
	POP	H
	RNC
	CALL	CLRSTR
	CALL	INFPR
	DW	40
	DC	'OUT OF MEMORY'
	CALL	GETCHR
	JMP	OUT1

CORPNT:	MOV	A,B
	ORA	A
	JP	CRPNT0
	CALL	CDEHL
	JNC	CRPNT1
	PUSH	D
	XCHG
	DAD	B
	XCHG
	CALL	CDEHL
	JC	CRPNT2
        MOV	H,D
	MOV	L,E
CRPNT2:	POP	D
	RET

CRPNT0:	CALL	CDEHL
	RC
CRPNT1:	DAD	B
	RET

CDEHL:	MOV	A,H
	CMP	D
	RNZ
	MOV	A,L
	CMP	E
	RET
LFTM::	POP	B
	CALL	wlewo
	JMP	RED

RHTM::	POP	B
	CALL	wprawo
	JMP	RED

UPM::	CALL	INSRED
	CALL	wwerh
	JMP	OUT3

DWNM::	CALL	INSRED
	CALL	wniz
	JMP	OUT3

SCRLUP::
	CALL	INSRED
	CALL	RLDN
	JMP	OUT3

SCRLDN::
	CALL	INSRED
	CALL	RLUP
	JMP	OUT3


SETC:	PUSH	PSW
	CALL	GETC
	STA	CURX
	CALL	CURCM
	POP	PSW
	RET


M03:	CALL	SETINF
	CALL	SETRST

RED::	CALL	DISCUR
	CALL	GETCHC

	MOV	A,B
	ANI	40H ; Ctrl flag
	JNZ	ANDR

	MOV	A,C ; All control symbols are less than 20h except for Backspace - 7Fh
	CPI	7fH
	jz	ANDR
	
	CPI	20H
	JNC	PRCHR

ANDR:	MOV	C,B

	lxi	d,DISALL
	PUSH	d

	MVI	B,0
	LXI	H,CMDTBL
	CALL	FNDCMD

	PUSH	H
	PUSH	B
	CALL	SETC
	POP	B
	POP	H

        CALL	FNDCMD

	pop	d
	LXI	d,OUT1
	PUSH	d

	CALL	FNDCMD
	PUSH	H
	PUSH	B
	CALL	INSRED
	POP	B
	POP	H
	CALL	FNDCMD
	PUSH	H
	LHLD	BLEND
	XCHG
	LHLD	BLBEG
	CALL	CDEHL
	POP	H
	CC	FNDCMD
	RET

DELCOR:	XCHG
	CALL	COR
	RC
	DCX	H
	RET


LDEL::	LDA	CURX
	DCR	A
	RZ
	STA	CURX
	CALL	SETC

RDEL::	CALL	FILSP
	CALL	CAD
	MOV	A,M
	CPI	0DH
	RZ
	DCX	H
	MOV	A,M
	XCHG
	PUSH	D
	INX	D
	MOV	B,D
	MOV	C,E
	POP	D
	LXI	H,STRRED+MAXLEN-1
	CALL	D0
	LXI	H,DELCOR
	CALL	CORRECT
	LDA	NEWMES
	DCR	A
	STA	NEWMES
	RET

REPMOD::
	LDA	MODE
	CPI	93H
	JZ	INSERT
	JMP	OVRW


BSC::	CALL	INSRED
	CALL	BSCR
	JMP	OUT3

TAB::	CALL	PRCH0
;	CALL	wprawo
	LDA	CURX
	dcr	a
	call	CalcNextTabPos
	STA	CURX
	RET

REST::	LHLD	OLDBLB
	SHLD	BLBEG
	LHLD	OLDBLE
	SHLD	BLEND
	JMP	OUT1


CR::	CALL	INSRED
	LHLD	SCRADR
	XCHG
	MVI	A,1
	STA	CURX
	CALL	DISPLY
CR0:	CALL	wniz
	CPI	0FFH
	JNZ	OUT1
	MVI	M,0DH
	INX	H
	MVI	M,0FFH
	SHLD	werhgr
	LHLD	NUMSTR
	INX	H
	SHLD	NUMSTR
	JMP	CR0

PRCH0:	STA	SYM
	LXI	H,STRRED
	CALL	FILSP
	CALL	CAD
	LDA	MODE
	CPI	93H
	JZ	PRC00
	LDA	NEWMES
	CPI	MAXLEN+1
	RNC
	CALL	INSSYM
PRC00:	CALL	?OUT
	CZ	INSSYM
	push	h
	CALL	wprawo
	pop	h
	LDA	SYM
	MOV	M,A
	RET

INSCTRL::
	POP	B
	CALL	GETCHR

PRCHR:	CALL	PRCH0
;	CALL	SETC
;	CALL	wprawo
DISALL:	CALL	SETC
	LXI	D,STRRED
	LHLD	VDADR
	lda	DISPOS
	CALL	DISSTR
	CALL	DISCUR
	LDA	SCRBG0+1
	ORA	A
	JZ	RED
	LHLD	SCRAD0
	XCHG
	LHLD	SCRBG0
	LDA	YSIZE0
	MOV	B,A
DIS00:	LDA	STRADR
	CMP	E
	JNZ	DIS01
	LDA	STRADR+1
	CMP	D
	JNZ	DIS01
	LXI	D,STRRED
	LDA	DISPOS
	PUSH	PSW
	LDA	DISPS0
	STA	DISPOS
	CALL	DISSTR
	POP	PSW
	STA	DISPOS
	JMP	RED
DIS01:	XCHG
	CALL	NEXTST
	XCHG
	PUSH	B
	LXI	B,ScrWidth
	DAD	B
	POP	B
	DCR	B
	JNZ	DIS00
	JMP	RED

?OUT:	CALL	GETC
	MOV	B,A
	LDA	NEWMES
	SUB	B
	RET

FILSP:	CALL	?OUT
	RNC
	CMA
	ADI	2
	PUSH	PSW
	CALL	CAD
	POP	PSW
	INX	H
	MVI	M,0DH
RED2:	DCX	H
	MVI	M,20H
	DCR	A
	JNZ	RED2
	CALL	GETC
	INR	A
	STA	NEWMES
	RET

INSSYM:	PUSH	H
	CALL	CAD
	INX	H
	XCHG
	LXI	H,STRRED+MAXLEN+1
	LXI	B,STRRED+MAXLEN
	CALL	U1
	LDA	NEWMES
	INR	A
	CPI	MAXLEN+2
	JNC	$+6
	STA	NEWMES
	MVI	A,0DH
	STA	STRRED+MAXLEN
	LXI	H,INSCOR
	CALL	CORRECT
	POP	H
	RET

CORRECT:	PUSH	H
	XCHG
	LHLD	BLBEG
	XCHG
	CALL	CORR
	LDA	BEGCOR
	ORA	A
	JZ	$+6
	SHLD	BLBEG
	POP	H
	XCHG
	PUSH	D
	LHLD	BLEND
	XCHG
	CALL	CORR
	LDA	ENDCOR
	ORA	A
	JZ	$+6
	SHLD	BLEND
	POP	D
 	RET

CORR:	PCHL

COR:	PUSH	H
	CALL	CHKPNT
	POP	H
	RC
	XCHG
	CALL	CADR1
	XCHG
	JMP	CDEHL

INSCOR:	XCHG
	CALL	COR
	RC
	INX	H
	RET

CHKPNT:	XCHG
	LHLD	STRADR
	DCX	H
	CALL	CDEHL
	CMC
	RC
	LDA	NEWMES
	DCR	A
	CALL	CADR11
	JMP	CDEHL

CAD:	CALL	GETC
	DCR	A
CAD1:	MVI	B,0
	MOV	C,A
	LXI	H,STRRED
	DAD	B
	RET

CADR1:	CALL	GETC
	DCR	A
CADR11:	MVI	B,0
	MOV	C,A
	LHLD	STRADR
	DAD	B
	RET


SWPWIN::
	CALL	SWPWN
	LHLD	STRADR
	JMP	DISADR

SWPWN:	LDA	SCRBG0+1
	ORA	A
	RZ
	CALL	SETST0
	LXI	H,SCRADR
	LXI	D,SCRAD0
	MVI	C,14
SWPW0:	MOV	B,M
	LDAX	D
	MOV	M,A
	MOV	A,B
	STAX	D
	INX	H
	INX	D
	DCR	C
	JNZ	SWPW0
	LDA	?WIN1
	CMA
	STA	?WIN1
	MVI	A,1
	ORA	A
	RET

YMAX	EQU	LogicHeight-3
YMIN	EQU	2

WINUP::	LDA	SCRBG0+1
	ORA	A
	JNZ	WINU0
	MVI	A,YMAX
	STA	YSIZE
	INR	A
	STA	YBEG0
	MVI	A,YMIN
	STA	YSIZE0
	LHLD	INFADR
	SHLD	INFAD0
	LXI	B,-3*ScrWidth
	DAD	B
	SHLD	SCRBG0
	SHLD	INFADR
	JMP	WIN01
WINU0:	LDA	?WIN1
	ORA	A
	JNZ	WINU1
	CALL	SWPWN
	CALL	WINU1
	JMP	SWPWN
WINU1:	LDA	YSIZE
	CPI	YMIN
	JZ	CLRW1
	DCR	A
	STA	YSIZE
	LXI	H,YSIZE0
	INR	M
	LXI	H,YBEG0
	DCR	M
	LHLD	INFADR
	LXI	B,-ScrWidth
	DAD	B
	SHLD	SCRBG0
	SHLD	INFADR
WIN01:	LDA	YSIZE
	MOV	B,A
	LDA	CURY
	CMP	B
	RC
	CALL	wwerh
	CALL	RLUP
	JMP	WIN01

CLRW1:	LXI	H,0
	SHLD	SCRBEG
	CALL	SWPWIN
	MVI	A,0FFH
	STA	?WIN1
	JMP	INIT

WINDN::	LDA	SCRBG0+1
	ORA	A
	JNZ	WIND0
	XRA	A
	STA	YBEG0
	STA	?WIN1
	MVI	A,YMAX
	STA	YSIZE
	LHLD	VRAM_ADR
	SHLD	SCRBG0
	MVI	A,YMIN
	STA	YSIZE0
	INR	A
	STA	YBEG
	LHLD	VRAM_ADR
	LXI	D, 3*ScrWidth
	DAD	D
	SHLD	INFAD0
	SHLD	SCRBEG
	CALL	GETINFADR
	SHLD	INFADR
	JMP	WIND01
WIND0:	LDA	?WIN1
	ORA	A
	JZ	WIND1
	CALL	SWPWN
	CALL	WIND1
	JMP	SWPWN
WIND1:	LDA	YSIZE
	CPI	YMIN
	JZ	CLRWD1
	DCR	A
	STA	YSIZE
	LXI	H,YSIZE0
	INR	M
	LXI	H,YBEG
	INR	M
	LHLD	INFAD0
	LXI	B,ScrWidth
	DAD	B
	SHLD	SCRBEG
	SHLD	INFAD0
WIND01:	LDA	YSIZE
	MOV	B,A
	LDA	CURY
	CMP	B
	RC
	CALL	wwerh
	CALL	RLUP
	JMP	WIND01

CLRWD1:	LXI	H,0
	SHLD	SCRBEG
	CALL	SWPWIN
	MVI	A,0FFH
	STA	?WIN1
	JMP	INIT


BSCR:	LHLD	SCRADR
	SHLD	STRADR
	LHLD	CURX
	MOV	A,H
	ORA	L
	DCR	A
	JNZ	CB1
CB00:	LXI	H,0101H
	SHLD	CURX
	LDA	YSIZE
	SUI	2
	JZ	CURSM
	MOV	B,A
CB0:	LHLD	STRADR
	CALL	NEXTST
	JZ	CURSM
	SHLD	STRADR
	CALL	INRCUR
	LXI	H,CURY
	INR	M
	DCR	B
	JNZ	CB0
	JMP	CURSM

CB1:	LDA	CURY
	LXI	H,101H
	SHLD	CURX
	LHLD	CURSTR
	MOV	C,A
	DCR	C
	MOV	A,L
	SUB	C
	MOV	M,A
	JNC	$+4
	DCX	H
	SHLD	CURSTR
	JMP	CURSM



NEW::	CALL	CLRSTR
	CALL	INFPR
	DW	33
	DC	'NEW Y/N:'
	LHLD	CURX
	PUSH	H
	LXI	H,ScrHeight*256+2AH
	SHLD	CURX
	CALL	CURM
	CALL	GETCHR
	CPI	59H
	JNZ	NEW1
	LHLD	nivgr
	MVI	M,0DH
	INX	H
	MVI	M,0FFH
	SHLD	werhgr
	JMP	START
NEW1:	POP	H
	SHLD	CURX
	JMP	CURSM

kraj		EQU	16

MaxStrLen	equ	15
@extend_key	equ	0
@backsp_key	equ	1
@exit_key	equ	3

Input_And_Show:
	mvi	a,1
	stax	b
	xchg
	SetScrAddr
@put_str:
	ldax	d
	ora	a
	jz	move_curs
	WriteNextSym
	inx	d
	ldax	b
	inr	a
	stax	b
	lda	CURX
	inr	a
	sta	CURX
	jmp	@put_str

INPSTR:
	MVI	M,0
	xchg
Edit_Line:
	MVI	A,1
	STAX	B
	MVI	A,kraj
	STA	CURX
	MVI	A,ScrHeight
	STA	CURY
	LHLD	INFADR
	PUSH	D
	LXI	D,kraj-1
	DAD	D
	POP	D
move_curs:
	call	CURM
Get_key:
	CALL	GETCHR
	CPI	@extend_key
	JNZ	No_extend
	CALL	GETCHR
	JMP	Ins_sym

No_extend:
	CPI	0DH
	jz	exit_inp_str
	CPI	@exit_key
	JZ	IN4
	CPI	@backsp_key
	JNZ	Ins_Sym

	LDAX	B
	DCR	A
	JZ	Get_Key
	STAX	B
	dcx	h
	SetScrAddr
	xra	a
	WriteNextSym
	dcx	h
	SetScrAddr
	dcx	d
	LDA	CURX
	DCR	A
	STA	CURX
	jmp	move_curs

Ins_Sym:
	stax	d
	ldax	b
	CPI	MaxStrLen
	JZ	Get_Key
	inr	a
	stax	b
	LDA	CURX
	INR	A
	STA	CURX
	ldax	d
	WriteNextSym
	inx	d
	jmp	move_curs

exit_inp_str:
	xra	a
	stax	d
	ret

IN4:	LHLD	STRADR
	CALL	DISADR
	JMP	OUT1



LINE:	push	b
	;LHLD	INFADR
	CALL	GETINFADR
	LXI	B,-ScrWidth
	DAD	B
	SetScrAddr
	MVI	c,LogicWidth
CLR1:	mvi	a,LineSym
	WriteNextSym
	dcr	c
	JNZ	CLR1
	pop	b
	RET

CLRSTR:	PUSH	H
	PUSH	PSW
	push	b
	CALL	LINE
	LHLD	VRAM_ADR
	LXI	B,INFSTR_OFFS-ScrWidth
	DAD	B
	SetScrAddr
	mvi	c,LogicWidth
CLR0:	mvi	a,space
	writeNextSym
	dcr	c
	JNZ	CLR0

	CALL	INFPR
	DW	30
	DB	DelimSym+80h

	CALL	INFPR
	DW	7
	DB	DelimSym+80h
	pop	b
	POP	PSW
	POP	H
	RET

INPSR:	CALL	CLRSTR
	CALL	INFPR
	DW	8
	DC	'TARGET:'
	LXI	H,STRSR
	LXI	B,SRMES
	JMP	INPSTR


CONT_SRREP:
	LDA	RPMES
	ORA	A
	JZ	CONT_SRH
	JMP	RPREP0

RPREP0:	CALL	MARK
	JMP	RPREP1

REPREP:	PUSH	H
	CALL	GETINFADR
	LXI	B,3
	DAD	B
	MVI	A,11
	MVI	M,0
	DCR	A
	INX	H
	JNZ	$-4
	POP	H
RPREP1:	LDA	RPMES
	DCR	A
	MOV	C,A
	MVI	B,0
	DAD	B
	JMP	REP0

REPLACE::
	LHLD	CURX
	PUSH	H
	CALL	INPSR
	CALL	CLRSTR
	CALL	INFPR
	DW	7
	DC	'REPLACE:'
	LXI	H,STRREP
	LXI	B,RPMES
	CALL	INPSTR
	CALL	CLRSTR
	CALL	INFPR
	DW	33
	DC	'[G]LOBAL OR [S]TEP:'
	LXI	H,ScrHeight*256+35H
	SHLD	CURX
	CALL	CURM
REP2:	CALL	GETCHR
	ANI	5FH
	STA	RMODE
	CPI	'S'
	JZ	REP3
	CPI	'G'
	JNZ	REP2
REP3:	CALL	CLRSTR
	POP	H
	SHLD	CURX
	LHLD	STRADR
REP0:	LDA	SRMES
	DCR	A
	JZ	IN4
	STA	OLDMES
	LDA	RPMES
	DCR	A
	JZ	IN4
	CALL	SearchStr
	PUSH	H
	XCHG
	CALL	DISAD1
	CALL	DISPLY
	POP	H
	LDA	RMODE
	CPI	'S'
	JNZ	REP4
	PUSH	H
	CALL	CLRSTR
	CALL	INFPR
	DW	33
	DC	'REPLACE Y/N'
	POP	H
REP1:	CALL	GETCHR
	ANI	5FH
	CPI	3
	RZ
	CPI	'N'
	JZ	REPREP
	CPI	'Y'
	JNZ	REP1
REP4:	PUSH	H
	XCHG
	LHLD	STRADR
	PUSH	H
	XCHG
	SHLD	STRADR
	LDA	RPMES
	DCR	A
	MOV	B,A
	STA	NEWMES
	LXI	H,STRREP
	XCHG
	LXI	H,STRRED
RP0:	LDAX	D
	MOV	M,A
	DCR	B
	INX	H
	INX	D
	JNZ	RP0
	CALL	INSR1
	POP	H
	SHLD	STRADR
	CALL	DISPLY
	POP	H
	JMP	REPREP

CONT_SRH::
	CALL	MARK
	INX	H
	CALL	SearchStr
	XCHG
	JMP	DISAD1

SEARCH::
	XRA	A
	STA	RPMES
	LHLD	CURX
	PUSH	H
	CALL	INPSR
	POP	H
	SHLD	CURX
	LHLD	STRADR
	call	SearchStr
	XCHG
	JMP	DISAD1

GetSym	macro
local	@no_upc
	ldax	d
	inx	d
	cmp	b
	jc	@no_upc
	cpi	0ffh
	jz	NotFound
	cmp	c
	jnc	@No_Upc
	sui	20h
@No_Upc:
	endm

SearchStr:
	lxi	b,'a' SHL 8 + 'z'+1
	xchg
	lxi	h,STRSR
	push	h
@upcase_lp:
	mov	a,m
	cmp	b
	jc	@noupcase
	cmp	c
	jnc	@noupcase
	sui	20h
@noupcase:
	mov	m,a
	inx	h
	ora	a
	jnz	@upcase_lp
	pop	h

	init_brk_check
@SrhLoop:
@SrhLp:
	check_break
	jz	ABSRH
	GetSym
        cmp	m
	jnz	@SrhLp
	inx	h
	push	d
@Cont:	GetSym
	cmp	m
	inx	h
	jz	@Cont
	pop	d
	dcx	h
	xra	a
	cmp	m
	lxi	h,STRSR
	jnz	@SrhLoop
	dcx	d
	xchg
	ret

NotFound:
	CALL	CLRSTR
	CALL	INFPR
	DW	33
	DC	'NOT FOUND'
	CALL	GETCHR
	CALL	CURM
	JMP	OUT1

ABSRH:	CALL	GETCHR
	CALL	CLRSTR
	CALL	INFPR
	DW	33
	DC	'SEARCH/REPLACE ABORTED'
	CALL	GETCHR
	CALL	CURM
	JMP	OUT1


LEND::	MVI	A,1
	STA	CURX
	RET

REND::	LDA	NEWMES
	CPI	MAXLEN+1
	JC	$+4
	DCR	A
	STA	CURX
	JMP	CURCM

BRKSTR::
	LHLD	NUMSTR
	INX	H
	SHLD	NUMSTR
	CALL	INSSYM
	CALL	CAD
	MVI	M,0DH
	JMP	CR

INSSPC::
	CALL	INSSYM
	CALL	CAD
	MVI	M,20H
	RET

DELLT::	CALL	FILSP
	LXI	H,LDCOR
	CALL	CORRECT
	CALL	GETC
	MOV	C,A
	LDA	NEWMES
	SUB	C
	CALL	CAD1
	PUSH	PSW
	PUSH	H
	CALL	CAD
	MOV	B,H
	MOV	C,L
	POP	H
	POP	PSW
	INR	A
	STA	NEWMES
	LXI	D,STRRED
	CALL	D1
	MVI	A,1
	STA	CURX
	RET

LDCOR:	XCHG
	PUSH	H
	CALL	CHKPNT
	POP	H
	RC
	XCHG
	CALL	CADR1
	CALL	CDEHL
	XCHG
	JNC	LDC0
	XCHG
	CALL	INV_H
	DAD	D
	XCHG
	LHLD	STRADR
	DAD	D
	INX	H
	RET
LDC0:	LHLD	STRADR
	RET

DELRT::	CALL	GETC
	MOV	B,A
	LDA	NEWMES
	CMP	B
	RC
	CALL	CAD
	MVI	M,0DH
	LXI	H,RDCOR
	CALL	CORRECT
	CALL	GETC
	STA	NEWMES
	RET

RDCOR:	XCHG
	PUSH	H
	CALL	CHKPNT
	POP	H
	RC
	XCHG
	CALL	CADR1
	CALL	CDEHL
	RC
	XCHG
	RET

JoinStr::
	LHLD	STRADR
	CALL	NEXTST
	RZ
	LHLD	NUMSTR
	DCX	H
	SHLD	NUMSTR
	LDA	NEWMES
	DCR	A
	STA	NEWMES
	JMP	INSR1

BEGBUF::
	LXI	H,1
	SHLD	CURSTR
	LHLD	nivgr
	SHLD	SCRADR
	SHLD	STRADR
	LXI	H,0101H
	SHLD	CURX
	JMP	CURSM

ENDBUF::
DREND:	LHLD	NUMSTR
	INX	H
	SHLD	CURSTR
	LHLD	werhgr
	SHLD	SCRADR
	SHLD	STRADR
	LXI	H,101H
	SHLD	CURX
	CALL	PAGEUP
	JMP	CB00

PAGEUP::
	LDA	YSIZE
	DCR	A
	MOV	B,A

STR2:	LHLD	SCRADR
	CALL	PREVST
	SHLD	SCRADR
	JNZ	$+7
	LXI	H,CURY
	DCR	M
	LHLD	STRADR
	CALL	PREVST
	SHLD	STRADR
	JZ	STR3
	CALL	DCRCUR
	DCR	B
	JNZ	STR2
	JMP	CURSM
STR3:	JMP	BEGBUF

PAGEDN::
	LDA	YSIZE
	DCR	A
	MOV	B,A

DR3:	LHLD	STRADR
	CALL	NEXTST
	JZ	DREND
	SHLD	STRADR
	LHLD	SCRADR
	CALL	NEXTST
	SHLD	SCRADR
	CALL	INRCUR
	DCR	B
	JNZ	DR3
	RET

	.comment %
MODSCR::
	LHLD	CURX
	PUSH	H
	CALL	CLRSTR
	CALL	INFPR
	DW	33
	DC	'NULL (0-9):'
	LXI	H,ScrHeight*256+2DH
	SHLD	CURX
	CALL	CURM
MODSC0:	CALL	GETCHR
	CPI	30H
	JC	MODSC0
	CPI	3AH
	JNC	MODSC0
	PUSH	PSW
	CALL	CLS
	POP	PSW
	SUI	30H-7
	STA	LPOS
	SUI	6
	LHLD	VRAM_ADR
	PUSH	D
	LXI	H,0E7B9H-0E7C2H
	DAD	D
	POP	D
	DCR	A
	DCX	H
	JNZ	$-2
	MVI	M,0F1H
	POP	H
	SHLD	CURX
	JMP	SAVMOD
%


DELLIN::
	LHLD	STRADR
	MOV	D,H
	MOV	E,L
	CALL	NEXTST
	RZ
	PUSH	H
	LHLD	NUMSTR
	DCX	H
	SHLD	NUMSTR
	PUSH	D
	LXI	H,DLCOR
	CALL	CORRECT
	POP	D
	POP	H
	MOV	B,H
	MOV	C,L
	JMP	DNSHT

DLCOR:	LHLD	STRADR
	RET

INSERT:	MVI	A,0B3H
	STA	MODE
	MVI	A,CURSOR_BLOCK ; 0EDH
	JMP	WIDCUR

OVRW:	MVI	A,93H
	STA	MODE
	MVI	A,CURSOR_LINE ; 0DDH
WIDCUR:
	call	SETSCR
	JMP	CURSM

SAVMOD:	LDA	MODE
	CPI	93H
	PUSH	PSW
	CNZ	INSERT
	POP	PSW
	CZ	OVRW
	RET

DISBEG::
	LHLD	BLBEG
	JMP	DISADR

DISEND::
	LHLD	BLEND
	JMP	DISADR

MARK:	LXI	H,NEWMES
	CALL	GETC
	CMP	M
	JC	MAR0
	MOV	A,M
MAR0:	DCR	A
	JMP	CADR11

MRBEG::	CALL	MARK
	SHLD	BLBEG
	RET

MREND::	CALL	MARK
	SHLD	BLEND
	RET
;------------- Main block commands -----------

DELBL::	CALL	DBL
	CALL	COMPST
	LHLD	BLBEG
	SHLD	BLEND
	JMP	DISADR
DBL:	LHLD	BLBEG
	XCHG
	LHLD	BLEND
	MOV	B,H
	MOV	C,L
	JMP	DNSHT

INV_H:	MOV	A,H
	CMA
	MOV	H,A
	MOV	A,L
	CMA
	MOV	L,A
	RET

JBLCU:	LHLD	DSTADR
	DCX	H
	CALL	CDEHL
	RNC
	LHLD	BLEND
	DCX	H
	CALL	CDEHL
	RC
	LHLD	BLBEG
	DCX	H
	CALL	CDEHL
	JC	INBLK
	PUSH	D
	CALL	BLKSIZ
	INX	H
	POP	D
	DAD	D
	XCHG
	RET
INBLK:	PUSH	D
	CALL	GLBSIZ
	XCHG
	POP	H
	CALL	CSUB
	XCHG
	RET

JBLCD:	LHLD	BLBEG
	DCX	H
	CALL	CDEHL
	RNC
	LHLD	DSTADR
	DCX	H
	CALL	CDEHL
	RC
	LHLD	BLEND
	DCX	H
	CALL	CDEHL
	JNC	INBLD
	PUSH	D
	CALL	BLKSIZ
	INX	H
	POP	D
	XCHG
	CALL	CSUB
	XCHG
	RET

INBLD:	LHLD	DSTADR
	DAD	D
	XCHG
	LHLD	BLEND
	XCHG
	CALL	CSUB
	XCHG
	RET

COPYBL::
	CALL	CBL
	CALL	COMPST
	LHLD	BLBEG
	JMP	DISADR
CBL:	CALL	CHBL
	JNC	CBL1
	LHLD	BLEND
	DCX	H
	CALL	CDEHL
	JNC	OUT1
CBL1:	CALL	BLKSIZ
	XCHG
	LHLD	DSTADR
	MOV	B,H
	MOV	C,L
	PUSH	H
	DAD	D
	PUSH	H
	INX	H
	XCHG
	CALL	UPSHT
	LHLD	BLBEG
	MOV	B,H
	MOV	C,L
	POP	H
	INX	H
	SHLD	BLEND
	DCX	H
	XCHG
	POP	H
	SHLD	BLBEG
	XCHG
	JMP	D1

CHBL:	CALL	MARK
	SHLD	DSTADR
	XCHG
	LHLD	BLBEG
	DCX	H
	JMP	CDEHL

JMPBL::	CALL	CHBL
	JNC	JBLUP
	LHLD	BLEND
	CALL	CDEHL
	JC	JBLDN
	JMP	OUT1
JBLUP:	LHLD	SCRAD0
	XCHG
	CALL	JBLCU
	XCHG
	SHLD	SCRAD0
	CALL	BLKSIZ
	XCHG
	LHLD	DSTADR
	PUSH	H
	PUSH	D
	CALL	JBLU
JBLEX:	POP	D
	POP	H
	SHLD	BLBEG
	PUSH	H
	DAD	D
	INX	H
	SHLD	BLEND
	POP	H
	JMP	DISADR

JBLDN:	LHLD	SCRAD0
	XCHG
	CALL	JBLCD
	XCHG
	SHLD	SCRAD0
	CALL	BLKSIZ
	XCHG
	LHLD	DSTADR
	PUSH	H
	PUSH	D
	CALL	JBLD
	POP	D
	POP	H
	SHLD	BLEND
	DCX	H
	CALL	CSUB
	SHLD	BLBEG
	JMP	DISADR

SETST0:	PUSH	H
	LDA	CURY0
	LHLD	SCRAD0
	MOV	B,A
SST00:	DCR	B
	JZ	SST01
	CALL	NEXTST
	JNZ	SST00
SST01:	SHLD	STRAD0
	POP	H
	RET


JBLU:	CALL	BLKSIZ
	INX	H
	PUSH	H
	CALL	GLBSIZ
	POP	D
	CALL	?DVNHD
	LHLD	DSTADR
	MOV	A,D
	ORA	E
	PUSH	PSW	; ? End of relocation
	DAD	D
	MOV	B,H
	MOV	C,L
	DCX	B
	LHLD	BLBEG
	XCHG
 	DCX	D
	LHLD	BLEND
	DCX	H
	CALL	GREXU	; "Great" Exchange
	XCHG
	INX	H
	SHLD	BLEND
	LHLD	DSTADR
 	SHLD	BLBEG
	XCHG
	INX	H
	SHLD	DSTADR
	POP	PSW	; Z - the end
	RZ
JBLD:	CALL	BLKSIZ
	INX	H
	PUSH	H
	LHLD	BLEND
	DCX	H
	XCHG
	LHLD	DSTADR
	CALL	CSUB
	DCX	H
	POP	D
	CALL	?DVNHD
	LHLD	DSTADR
	MOV	A,D
	ORA	E
	PUSH	PSW	; ? End of relocation
	CALL	CSUB
	MOV	B,H
	MOV	C,L
	LHLD	BLEND
	DCX	H
	XCHG
 	INX	D
	LHLD	BLBEG
	CALL	GREXD	; "Great" Exchange
	XCHG
	SHLD	BLBEG
	LHLD	DSTADR
 	SHLD	BLEND
	XCHG
	SHLD	DSTADR
	POP	PSW	; Z - the end
	JNZ	JBLU
	RET

BLKSIZ:	LHLD	BLBEG
	XCHG
	LHLD	BLEND
	DCX	H
	JMP	CSUB

GLBSIZ:	LHLD	DSTADR
	XCHG
	LHLD	BLBEG
	JMP	CSUB

GREXU:	MOV	A,E
	CMP	C
	JNZ	GREXU0
	MOV	A,D
	CMP	B
	RZ
GREXU0:	PUSH	B
GREXU1:	MOV	C,M
	LDAX	D
	MOV	M,A
	MOV	A,C
	STAX	D
	DCX	H
	DCX	D
	MOV	A,D
	CMP	B
	JNZ	GREXU1
	POP	B
	MOV	A,E
	CMP	C
        JNZ	GREXU0
	RET


GREXD:	MOV	A,E
	CMP	C
	JNZ	GREXD0
	MOV	A,D
	CMP	B
	RZ
GREXD0:	PUSH	B
GREXD1:	MOV	C,M
	LDAX	D
	MOV	M,A
	MOV	A,C
	STAX	D
	INX	H
	INX	D
	MOV	A,D
	CMP	B
	JNZ	GREXD1
	POP	B
	MOV	A,E
	CMP	C
	JNZ	GREXD0
	RET

DSTADR:	DS	2
;------------------------------------------

DISADR:	XCHG
	LHLD	SCRADR
	CALL	DA2
	SHLD	SCRADR
	XCHG
	CALL	CDEHL
	XCHG
	JC	DISAD1
	LHLD	SCREND
	CALL	DA2
	SHLD	SCREND
	XCHG
	CALL	CDEHL
	XCHG
	JNC	DISAD1
DAD1:	CALL	DA1
	SHLD	STRADR
	LHLD	SCRADR
	MVI	B,0
DAD0:	INR	B
	MOV	A,B
	STA	CURY
	CALL	NEXTST
	CALL	CDEHL
	JZ	DAD0
	JNC	DSAD0
	JMP	DAD0

DA1:	MOV	H,D
	MOV	L,E
DA2:	DCX	H
	MOV	A,M
	CPI	0DH
	JNZ	DI3
	INX	H
	RET
DI3:	INX	H
	JMP	PREVST

DISAD1:	CALL	DA1
	SHLD	SCRADR
	LDA	CURY
	MOV	C,A
DS6:	DCR	C
	JZ	DAD1
	CALL	PREVST
	JZ	DAD1
	SHLD	SCRADR
	JMP	DS6

DSAD0:	LHLD	STRADR
	SHLD	TABSRH
DS5:	MVI	B,1
DS0:	MOV	A,D
	CMP	H
	JNZ	DS1
	MOV	A,E
	CMP	L
	JZ	DISAD0
DS1:	INX	H
	INR	B
	JNZ	DS0
DISAD0:	MOV	A,B
	STA	CURX
	CALL	COMCUR
	JMP	CURCM

BPR:	MOV	A,E
	CALL	BPR1
	MOV	A,D
	JMP	BPR1
BPR1:	PUSH	PSW
	call	BPR01
	POP	PSW
	RRC
	RRC
	RRC
	RRC
BPR01:	ANI	0FH
	ADI	48
	CPI	58
	JC	$+5
	ADI	7
	SetScrAddr
	WriteNextSym
	DCX	H
	DCX	H
	RET

GETINFADR:
	PUSH	B
	LHLD	VRAM_ADR
	LXI	B,INFSTR_OFFS
	DAD	B
	POP	B
	RET

INFPR:	POP	H
	MOV	E,M
	INX	H
	MOV	D,M
	INX	H
 	PUSH	H
	CALL	GETINFADR
	DAD	D
	XCHG
	POP	H
	JMP	print0

PRINT:	POP	H
	MOV	E,M
	INX	H
	MOV	D,M
	INX	H

PRINT0:	xchg
	SetScrAddr
@prnt:	ldax	d
	ORA	A
	JM	PRINT1

	WriteNextSym
	inx	d
	JMP	@prnt

PRINT1:	ANI	7FH
	WriteNextSym
	xchg
	inx	h
	pchl

CALC::	CALL	CLRSTR
	CALL	INFPR
	DW	31
	DC	'= 0000H  0000DEC'
CALC0:	CALL	INFPR
	DW	10
	DC	'EXPR='
	LXI	H,FILNAM
	LXI	B,NAMMES
	PUSH	H
	CALL	INPSTR
	POP	H
	CALL	COMPUTE
	PUSH	H
	XCHG
	CALL	GETINFADR
	PUSH	B
	LXI	B,36
	DAD	B
	POP	B
	CALL	BPR
	POP	H
	CALL	?FBBCD
	XCHG
	CALL	GETINFADR
	PUSH	B
	LXI	B,43
	DAD	B
	POP	B
	CALL	BPR
	JMP	CALC0

COMPUTE:CALL	GETVL1
	MOV	A,M
	INX	H
	MOV	B,D
	MOV	C,E
	PUSH	PSW
	PUSH	B
	CALL	GETVL1
	POP	B
	MOV	H,B
	MOV	L,C
	POP	PSW

	CPI	'+'
	JZ	CADD
	CPI	'-'
	JZ	CSUB
	CPI	'*'
	JZ	?MULHD
	CPI	'/'
	JZ	?DVNHD
	JMP	ERR

CADD:	DAD	D
	RET

ERR:	JMP	IN4

CSUB:	XCHG
	CALL	?NEGHL
	DAD	D
	RET



GETVL1:	LXI	D,0
	MOV	A,M
	CALL	GET4
	ORA	A
	RM
GET2:	MOV	A,M
	CALL	GET4
	ORA	A
	JM	GET1
	XCHG
	DAD	H
	DAD	H
	DAD	H
	DAD	H
	XCHG
	ORA	E
	MOV	E,A
	INX	H
	JMP	GET2
GET1:	MOV	A,M
	CPI	'H'
	JZ	GET3
	PUSH	H
	XCHG
	CALL	?FBCDB
	XCHG
	POP	H
	RET

GET3:	INX	H
	RET

GET4:	SUI	'0'
	RC
	CPI	0AH
	RC
	SUI	7
	RC
	CPI	16
	RC
GET5:	MVI	A,-7
	RET

?FBBCD: LXI	D,0
	MVI	C,16
?FBBC0:	DAD	H
	MOV	A,E
	ADC	A
	DAA
	MOV	E,A
	MOV	A,D
	ADC	A
	DAA
	MOV	D,A
	DCR	C
	JNZ	?FBBC0
	XCHG
	RET
?FBCDB:	LXI	D,0
	XCHG
	MVI	C,16
?FBCB0:	XRA	A
	MOV	A,D
	RAR
	CALL	CORR_A
	MOV	D,A
	MOV	A,E
	RAR
	CALL	CORR_A
	MOV	E,A
	MOV	A,H
	RAR
	MOV	H,A
	MOV	A,L
	RAR
	MOV	L,A
	DCR	C
	JNZ	?FBCB0
	RET

CORR_A:	PUSH	PSW
	MOV	B,A
	ANI	8
	JZ	NOCR1
	MOV	A,B
	SUI	3
	MOV	B,A
NOCR1:	MOV	A,B
	ANI	80H
	JZ	NOCR2
	MOV	A,B
	SUI	30H
	MOV	B,A
NOCR2:	POP	PSW
	MOV	A,B
	RET


; 16-BIT MULTIPLY
; HL *= DE
?MULHD:	MOV	B,H
	MOV	C,L
	LXI	H,0
	MVI	A,16
?01:	DAD	H
	XCHG
	DAD	H
	XCHG
	JNC	?02
	DAD	B
?02:	DCR	A
	JNZ	?01
	RET


; 16 - BIT UNSIGNED DIVISION
; HL /= DE
; DE = HL % DE
?DVNHD:	MOV	B,D
	MOV	C,E
	LXI	D,0
	MVI	A,16
?21:	PUSH	PSW
	DAD	H
	MOV	A,E
	RAL
	MOV	E,A
	MOV	A,D
	RAL
	MOV	D,A
	JC	?22
	MOV	A,E
	SUB	C
	MOV	A,D
	SBB	B
	JC	?23
?22:	MOV	A,E
	SUB	C
	MOV	E,A
	MOV	A,D
	SBB	B
	MOV	D,A
	INR	L
?23:	POP	PSW
	DCR	A
	JNZ	?21
	RET

?ABSHL:	MOV	A,H
	ORA	A
	RP
?NEGHL:	DCX	H
?NOTHL:	MOV	A,L
	CMA
	MOV	L,A
	MOV	A,H
	CMA
	MOV	H,A
	RET


EXIT::	call	CLS
	JMP	0F800h;rst	0

;----- Display one editor string ----------
DISSTR::	SetScrAddr
	MVI	B,0
	LDA	DISPOS
	MOV	C,A  
	call	_SkipSyms
	MVI	C,LogicWidth
	push	h
_DispNxtChr:
	LDAX	D
	CPI	0FFH
	JZ	_BlankEos ; Blank to end of screen
	CPI	13
	JZ	_BlankEos
	CPI	9
	JZ	_DispTab
ifdef	LimitedCharSet
	ORA	A
	JP	$+5
	MVI	A,0D6H
endif
	WriteNextSym
	INX	D
	INR	B
	DCR	C
	JNZ	_DispNxtChr

_Eos:	POP	H
	lxi	b,ScrWidth
	dad	b
_SkipToEol:
	LDAX	D
	CPI	13
	RZ
	cpi	0ffh
	RZ
	INX	D
	JMP	_SkipToEol

_DispTab:
	call	CalcTab
	INX	D
_DspT:	push	psw
	mvi	a,space
	WriteNextSym
	pop	psw
	INR	B
	DCR	C
	JZ	_Eos
	DCR	A
	JNZ	_DspT
	JMP	_DispNxtChr


_BlankEos:
	push	psw
	mvi	a,space
	WriteNextSym
	pop	psw
	DCR	C
	JNZ	_BlankEos
	JMP	_Eos

;	*
_SkipSyms:
	INR	B
	DCR	C
	rz
	LDAX	D
	CPI	0FFH
	rz
	CPI	0DH
	rz
	CPI	9
	jnz	_ContSkipping
	call	CalcTab
_SkTabLp:
	DCR	A
	JZ	_ContSkipping
	INR	B
	DCR	C
	rz
	jmp	_SkTabLp

_ContSkipping:
	INX	D
	JMP	_SkipSyms

CalcTab:MOV	A,B
	DCR	A
	ANI	TabStep-1
	SUI	TabStep+1
	CMA
	ret

;--------------- DISSTR ----------
PUBLIC BLBEG,BLEND,CDEHL,CLRSTR,CURX,DISADR,FILNAM,INFPR,INPSTR,MARK,MAXRAM
PUBLIC NAMMES,nivgr,werhgr,OUT1,PRINT


nivgr	EQU	WRK
werhgr	EQU	WRK+2
VDADR	EQU	WRK+4
SCREND	EQU	WRK+6
NUMSTR	EQU	WRK+8
CURSTR	EQU	WRK+10
BLBEG	EQU	WRK+12
BLEND	EQU	WRK+14
OLDBLB	EQU	WRK+16
OLDBLE	EQU	WRK+18
BEGCOR	EQU	WRK+20
ENDCOR	EQU	WRK+21
SRMES	EQU	WRK+22
RPMES	EQU	WRK+23
NAMMES	EQU	WRK+24
OLDMES	EQU	WRK+25
NEWMES	EQU	WRK+26
MODE	EQU	WRK+27
RMODE	EQU	WRK+28	; 1

SCRADR	EQU	WRK+32
STRADR	EQU	WRK+34
SCRBEG	EQU	WRK+36
INFADR	EQU	WRK+38
YSIZE	EQU	WRK+40
YBEG	EQU	WRK+41
CURX	EQU	WRK+42
CURY	EQU	WRK+43
DISPOS	EQU	WRK+44
?END	EQU	WRK+45

SCRAD0	EQU	WRK+46
STRAD0	EQU	WRK+48
SCRBG0	EQU	WRK+50
INFAD0	EQU	WRK+52
YSIZE0	EQU	WRK+54
YBEG0	EQU	WRK+55
CURX0	EQU	WRK+56
CURY0	EQU	WRK+57
DISPS0	EQU	WRK+58
;?END0	EQU	WRK+59

?WIN1	EQU	WRK+60
;PRSP	EQU	WRK+59
TABSRH	EQU	WRK+61
;?END	EQU	WRK+63
SYM	EQU	WRK+66	; 1
STRSR	EQU	WRK+97
STRREP	EQU	WRK+111
FILNAM	EQU	WRK+125
STRRED	EQU	WRK+125
PRSP:	DS	2
IFNDEF	noend
	END
ENDIF


